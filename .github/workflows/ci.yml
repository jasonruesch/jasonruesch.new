name: CI

on:
  push:
    branches:
      - main

# Read permissions needed for nx-set-shas within nx-cloud-main.yml, when run on the main branch
permissions:
  actions: read
  # Write permission needed for nx-semantic-release to create releases
  contents: write
  # Write permission needed for nx-semantic-release to create packages
  packages: write

jobs:
  # main:
  #   if: contains(github.event.head_commit.message, 'chore(release)') != true
  #   name: Nx Cloud - Main Job
  #   uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.1
  #   with:
  #     main-branch-name: main
  #     number-of-agents: 3
  #     init-commands: |
  #       npx nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
  #     parallel-commands: |
  #       npx nx-cloud record -- npx nx format:check
  #     parallel-commands-on-agents: |
  #       npx nx affected --target=lint --parallel=3
  #       npx nx affected --target=test --parallel=3 --ci --code-coverage
  #       npx nx affected --target=build --parallel=3

  # agents:
  #   name: Nx Cloud - Agents
  #   uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.13.1
  #   with:
  #     number-of-agents: 3
  main:
    if: contains(github.event.head_commit.message, 'chore(release)') != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v3

      - run: npx nx-cloud record -- nx format:check
      - run: npx nx affected -t lint,test,build --parallel=3

  release:
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - run: npm ci

      - run: HUSKY=0 npx nx run-many -t semantic-release --all --parallel=1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
